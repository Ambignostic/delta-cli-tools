<?php

namespace DeltaCli\Exception;

use DeltaCli\Host;
use Exception as PhpException;
use Symfony\Component\Console\Output\OutputInterface;

class SshConnectionFailure extends PhpException implements ConsoleOutputInterface
{
    /**
     * @var Host
     */
    private $host;

    /**
     * @var string
     */
    private $failingCommand;

    /**
     * @var array
     */
    private $output;

    public function hasBanner()
    {
        return false;
    }

    public function setHost(Host $host)
    {
        $this->host = $host;

        return $this;
    }

    public function setFailingCommand($failingCommand)
    {
        $this->failingCommand = $failingCommand;

        return $this;
    }

    public function setOutput(array $output)
    {
        $this->output = $output;

        return $this;
    }

    public function outputToConsole(OutputInterface $output)
    {
        $output->writeln(
            [
                'An SSH connection could not be established.  You probably need to install your',
                'project\'s SSH keys.  You will need the SSH password to install the keys.  If you',
                'continue having issues, you may need to use the VPN or troubleshoot common network',
                'issues.',
                ''
            ]
        );

        $environmentName = 'vpn';

        if ($this->host) {
            $environmentName = $this->host->getEnvironment()->getName();

            $output->writeln(
                [
                    'You are attempting to connect to the following environment and host:',
                    '  <comment>Environment:</comment> ' . $environmentName,
                    '  <comment>Hostname:</comment> ' . $this->host->getHostname(),
                    '  <comment>Username:</comment> ' . $this->host->getUsername(),
                    '  <comment>Port:</comment> ' . $this->host->getSshPort(),
                    ''
                ]
            );
        }

        $output->writeln(
            [
                'Install SSH keys in an environment:',
                "  <fg=cyan>delta ssh:install-key {$environmentName}</>",
                ''
            ]
        );

        if ($this->failingCommand) {
            $output->writeln(
                [
                    'This is the full command that is failing:',
                    '  ' . $this->failingCommand,
                    ''
                ]
            );
        }

        if ($this->output && count($this->output)) {
            $output->writeln(
                [
                    'This is the output generated by the command:'
                ]
            );

            foreach ($this->output as $line) {
                $output->writeln('  ' . $line);
            }
        }
    }
}
